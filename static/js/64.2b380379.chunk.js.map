{"version":3,"file":"static/js/64.2b380379.chunk.js","mappings":"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","sources":["components/Section/Section_css.jsx","components/Section/Section.jsx","components/ContactInfo/ContactInfo.jsx","components/ContactsInfo/ContactsInfo._css.jsx","components/ContactsInfo/ContactsInfo.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/Modal.jsx","components/ContastsSkeleton/ContastsSkeleton.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 0;\n  padding: 16px;\n  font-size: 32px;\n`;\n\nexport const SectionEl = styled.section`\n  margin-top: 12px;\n  margin-bottom: 12px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Title, SectionEl } from './Section_css';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionEl>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionEl>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","// import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/Contacts/operations';\n\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Grid,\n  IconButton,\n} from '@mui/material';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactInfo = ({ _id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  const onDeliteContact = _id => {\n    dispatch(deleteContact(_id));\n  };\n\n  const Demo = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n  }));\n\n  return (\n    <Box sx={{ flexGrow: 1, maxWidth: '100%' }}>\n      <Grid item xs={12} md={6}>\n        <Demo>\n          <List>\n            <ListItem\n              secondaryAction={\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    onDeliteContact(_id);\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              }\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <PhoneIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText>\n                {name}: {phone}\n              </ListItemText>\n            </ListItem>\n          </List>\n        </Demo>\n      </Grid>\n    </Box>\n  );\n};\n\nContactInfo.propTypes = {\n  _id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 24px;\n  padding: 0;\n`;\n","import { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from \"redux/selectors\";\n\nimport {ContactInfo} from 'components/ContactInfo/ContactInfo';\n\nimport { Ul } from './ContactsInfo._css';\n\nexport const ContactsInfo = () => {\n\n      const contacts = useSelector(getContacts);\n      const filter = useSelector(getFilter);\n      \n      const toFiltredContacts = () => {\n            const normalizeFilter = filter.toLowerCase();\n            return (contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter)));\n      }\n  \n      const filtredContacts = toFiltredContacts();\n     \n      return (\n          <Ul>\n                  {filtredContacts.map(( contact ) => (\n                        <ContactInfo key = {contact._id} {...contact}/>))}\n          </Ul>)\n};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/Contacts/filterSlice';\n\nimport {TextField} from '@mui/material';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <TextField\n      id=\"outlined-search\"\n      label=\"Find contact\"\n      type=\"search\"\n      variant=\"filled\"\n      name=\"filter\"\n      value={filter}\n      onChange={handleFilter}\n    />\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/Contacts/operations';\n\nimport {Button, Box, TextField} from '@mui/material';\n\nexport function ContactForm({ toggleModal }) {\n  const [contactName, setContactName] = useState('');\n  const [contactPhone, setContactPhone] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'contactName':\n        setContactName(value);\n        break;\n      case 'contactPhone':\n        setContactPhone(value);\n        break;\n      default:\n        setContactName('');\n        setContactPhone('');\n        break;\n    }\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    const { contactName, contactPhone } = e.currentTarget.elements;\n\n    const normalizeNewContactName = contactName.value.toLowerCase();\n\n    contacts.find(\n      contact => contact.name.toLowerCase() === normalizeNewContactName\n    )\n      ? alert(`${contactName.value} is already incontacts`)\n      : dispatch(\n          addContact({ name: contactName.value, phone: contactPhone.value })\n        );\n\n    setContactName('');\n    setContactPhone('');\n    toggleModal();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleAddContact}\n    >\n      <div>\n        <TextField\n          type=\"text\"\n          name=\"contactName\"\n          label=\"Name\"\n          onChange={handleChange}\n          value={contactName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          style={{ width: '38ch' }}\n        />\n        <TextField\n          required\n          type=\"tel\"\n          label=\"Phone\"\n          name=\"contactPhone\"\n          onChange={handleChange}\n          value={contactPhone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          style={{ width: '38ch' }}\n        />\n      </div>\n\n      <Button\n        size=\"small\"\n        type=\"submit\"\n        text=\"Add contact\"\n        style={{ marginLeft: '8px' }}\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n}\n\nContactForm.propTypes = {\n  toggleModal: PropTypes.func,\n};\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { ContactForm } from './ContactForm/ContactForm';\n\nimport { Backdrop, Box, Modal, Fade, Button } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  borderColor: 'primary',\n};\n\nexport function ModalWindow({ toggleModal, isModalOpen }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEsc);\n\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  });\n\n  const handleEsc = e => {\n    if (e.code === 'Escape') {\n      toggleModal();\n    }\n  };\n\n  const handleBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      toggleModal();\n    }\n  };\n\n  const handleClose = e => {\n    toggleModal();\n  };\n\n  return createPortal(\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={isModalOpen}\n      onClose={handleBackdrop}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={isModalOpen}>\n        <Box sx={style}>\n          <Button sx={{ left: '88%' }} onClick={handleClose}>\n            <CloseIcon />\n          </Button>\n          <ContactForm toggleModal={toggleModal} />\n        </Box>\n      </Fade>\n    </Modal>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func,\n  src: PropTypes.string,\n};\n","import { Card, Skeleton } from '@mui/material';\n\nexport function ContastsSkeleton() {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: '318px',\n        marginTop: '24px',\n      }}\n    >\n      {[1, 2, 3, 4, 5].map(item => (\n        <Card\n          key={item}\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: '16px',\n            marginBottom: '20px',\n            boxShadow: 'none',\n          }}\n        >\n          <Skeleton variant=\"circular\" width={40} height={40} />\n          <Skeleton variant=\"rounded\" width={230} height={24} />\n          <Skeleton variant=\"circular\" width={24} height={24} />\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchContacts } from 'redux/Contacts/operations';\nimport { getIsLoading, getError, getContacts } from 'redux/selectors';\nimport { Section } from 'components/Section/Section';\nimport { ContactsInfo } from 'components/ContactsInfo/ContactsInfo';\nimport { Filter } from 'components/Filter/Filter';\nimport { ModalWindow } from 'components/Modal';\nimport { ContastsSkeleton } from 'components/ContastsSkeleton/ContastsSkeleton';\n\nimport { Button, Typography } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport SearchIcon from '@mui/icons-material/Search';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\n\n  const handleOpenModal = () => {\n    toggleModal();\n  };\n\n  const toggleFilter = () => setIsFilterOpen(!isFilterOpen);\n\n  const handleOpenFilter = () => {\n    toggleFilter();\n  };\n\n  return (\n    <>\n      <Section>\n        <Typography\n          variant=\"h4\"\n          component=\"h2\"\n          style={{ textAlign: 'center', marginBottom: '12px' }}\n        >\n          My contacts\n        </Typography>\n        <div style={{ marginBottom: '12px' }}>\n          <Button type=\"button\" onClick={handleOpenModal}>\n            <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n          </Button>\n          <Button type=\"button\" onClick={handleOpenFilter}>\n            <SearchIcon color=\"primary\" fontSize=\"large\" />\n          </Button>\n        </div>\n        {isFilterOpen && <Filter />}\n\n        {isLoading && !error && contacts.length === 0 && \n        <ContastsSkeleton/>}\n\n        <ContactsInfo />\n      </Section>\n\n      {isModalOpen && (\n        <ModalWindow isModalOpen={isModalOpen} toggleModal={toggleModal} />\n      )}\n    </>\n  );\n}\nexport default Contacts;\n"],"names":["Title","styled","SectionEl","Section","title","children","ContactInfo","_id","name","phone","dispatch","useDispatch","Demo","backgroundColor","theme","palette","background","paper","Box","sx","flexGrow","maxWidth","Grid","item","xs","md","List","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","onDeliteContact","Delete","ListItemAvatar","Avatar","Phone","ListItemText","Ul","ContactsInfo","contacts","useSelector","getContacts","filter","getFilter","filtredContacts","normalizeFilter","toLowerCase","contact","includes","toFiltredContacts","map","Filter","TextField","id","label","type","variant","value","onChange","e","target","changeFilter","ContactForm","toggleModal","useState","contactName","setContactName","contactPhone","setContactPhone","handleChange","component","m","width","noValidate","autoComplete","onSubmit","preventDefault","currentTarget","elements","normalizeNewContactName","find","alert","addContact","pattern","required","style","Button","size","text","marginLeft","modalRoot","document","getElementById","position","top","left","transform","bgcolor","border","boxShadow","p","borderColor","ModalWindow","isModalOpen","useEffect","window","addEventListener","handleEsc","removeEventListener","code","createPortal","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Close","PropTypes","src","ContastsSkeleton","display","flexDirection","marginRight","marginTop","Card","alignItems","gap","marginBottom","Skeleton","height","isLoading","getIsLoading","error","getError","setIsModalOpen","isFilterOpen","setIsFilterOpen","fetchContacts","Typography","textAlign","AddCircle","color","fontSize","Search","length"],"sourceRoot":""}