{"version":3,"file":"static/js/285.fe8a4b7f.chunk.js","mappings":"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","sources":["pages/Register.jsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/Auth/authOperations';\n\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport { Container } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nfunction Register() {\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'userName':\n        setUserName(value);\n        break;\n      case 'userEmail':\n        setUserEmail(value);\n        break;\n      case 'userPassword':\n        setUserPassword(value);\n        break;\n      default:\n        setUserName('');\n        setUserEmail('');\n        setUserPassword('');\n        break;\n    }\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n\n    const { userName, userEmail, userPassword } = e.currentTarget.elements;\n\n    dispatch(\n      register({\n        name: userName.value,\n        email: userEmail.value,\n        password: userPassword.value,\n      })\n    );\n\n    setUserName('');\n    setUserEmail('');\n    setUserPassword('');\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <h2 style={{color: \"#1976d2\", textAlign: \"center\", marginTop: 48 }}>Don't have an account yet? <br /> Register and start working with contacts!</h2>\n      <Card\n        sx={{ maxWidth: 375 }}\n        style={{ marginRight: 'auto', marginLeft: 'auto', marginTop: 24 }}\n      >\n        <CardContent>\n          <Box\n            component=\"form\"\n            sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}\n            noValidate\n            autoComplete=\"off\"\n            onSubmit={handleRegister}\n          >\n            <div>\n              <TextField\n                required\n                label=\"Name\"\n                autoComplete=\"on\"\n                type=\"text\"\n                name=\"userName\"\n                onChange={handleChange}\n                value={userName}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                style={{ width: '38ch' }}\n              />\n              <TextField\n                required\n                label=\"Email\"\n                autoComplete=\"on\"\n                type=\"email\"\n                name=\"userEmail\"\n                onChange={handleChange}\n                value={userEmail}\n                title=\"Email must be digits, letters and contain @\"\n                style={{ width: '38ch' }}\n              />\n              <TextField\n                required\n                label=\"Password\"\n                autoComplete=\"current-password\"\n                type=\"password\"\n                name=\"userPassword\"\n                onChange={handleChange}\n                value={userPassword}\n                pattern=\"/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}/g\"\n                title=\"Password must contain letters and numbers\"\n                style={{ width: '38ch' }}\n              />\n            </div>\n\n            <Button\n              size=\"small\"\n              type=\"submit\"\n              text=\"Register\"\n              style={{ marginLeft: '8px' }}\n            >\n              Register\n            </Button>\n          </Box>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Register;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["useState","userName","setUserName","userEmail","setUserEmail","userPassword","setUserPassword","dispatch","useDispatch","handleChange","e","target","name","value","maxWidth","style","color","textAlign","marginTop","sx","marginRight","marginLeft","component","m","width","noValidate","autoComplete","onSubmit","preventDefault","currentTarget","elements","register","email","password","required","label","type","onChange","pattern","title","size","text","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","as"],"sourceRoot":""}