{"version":3,"file":"static/js/38.e0dfc98c.chunk.js","mappings":"0PAEaA,EAAQC,EAAAA,GAAAA,MAAH,8HAQLC,EAAQD,EAAAA,GAAAA,MAAH,mHAQLE,EAASF,EAAAA,GAAAA,OAAH,oO,6FCgDnB,UA7DA,WACE,OAAkCG,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GACpB,MAAuBA,EAAEC,OAAlBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACb,OAAQD,GACN,IAAM,YACJR,EAAaS,GACb,MACF,IAAM,eACJP,EAAgBO,GAChB,MACF,QACET,EAAa,IACbE,EAAgB,IAGrB,EAgBC,OACE,kBAAMQ,SAfU,SAACJ,GACnBA,EAAEK,iBAEF,MAAoCL,EAAEM,cAAcC,SAA5Cd,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,aAKnBE,GAASW,EAAAA,EAAAA,IAAM,CAACC,MAAOhB,EAAUU,MAAOO,SAAUf,EAAaQ,SAE3DT,EAAa,IACbE,EAAgB,GACrB,EAGG,WACE,UAAC,KAAD,qBAAa,SAAC,KAAD,CACXe,KAAK,QACLT,KAAK,YACLU,SAAUb,EACVI,MAAOV,EAEPoB,MAAM,8CACNC,UAAQ,QAEV,UAAC,KAAD,wBAAgB,SAAC,KAAD,CACdH,KAAK,OACLT,KAAK,eACLU,SAAUb,EACVI,MAAOR,EAEPkB,MAAM,4CACNC,UAAQ,QAGV,SAAC,KAAD,CAAQH,KAAK,SAASI,KAAK,QAA3B,sBAEP,C","sources":["components/ContactForm/ContactForm_css.jsx","pages/Login.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Label = styled.label`\ndisplay: block;\n  padding: 4px;\n  margin: 8px;\n  text-transform: uppercase;\n  font-size: 24px;\n  `;\n\nexport const Input = styled.input`\ndisplay: block;\nmargin-top: 8px;\nfont-size: 24px;\n&:hover {\n    border-color: black;\n}`;\n\nexport const Button = styled.button`  \n  width: 200px;\n  height: 50px;\n  padding: 4px;\n  margin: 8px;\n  color: white;\n  font-size: 24px;\n  text-transform: uppercase;\n  background-color: black;\n  border-radius: 6px;\n  cursor: pointer;`;\n","import React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { Label, Input, Button } from \"../components/ContactForm/ContactForm_css\";\nimport { logIn } from 'redux/authOperations';\n\nfunction Login() {\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const {name, value } = e.target;\n    switch (name) {\n      case ('userEmail'):\n        setUserEmail(value);\n        break;\n      case ('userPassword'):\n        setUserPassword(value);\n        break;\n      default:\n        setUserEmail('');\n        setUserPassword('');\n        break;\n    }    \n  }\n\n  const handleLogIn = (e) => {\n    e.preventDefault();\n\n    const { userEmail, userPassword } = e.currentTarget.elements;\n\n    // const normalizeNewContactName = userName.value.toLowerCase();\n\n    // contacts.find(contact => contact.name.toLowerCase() === normalizeNewContactName) ? alert(`${contactName.value} is already incontacts`) :\n    dispatch(logIn({email: userEmail.value, password: userPassword.value,}));\n\n        setUserEmail('');\n        setUserPassword('');\n  }\n\n    return (\n      <form onSubmit={handleLogIn} >\n        <Label>Email <Input\n          type=\"email\"\n          name=\"userEmail\"\n          onChange={handleChange}\n          value={userEmail}\n          \n          title=\"Email must be digits, letters and contain @\"\n          required\n        /></Label>\n        <Label>Password <Input\n          type=\"text\"\n          name=\"userPassword\"\n          onChange={handleChange}\n          value={userPassword}\n        //   pattern=\"/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{7,}/g\"\n          title=\"Password must contain letters and numbers\"\n          required\n        /></Label>\n            \n        <Button type=\"submit\" text=\"LogIn\">Log In</Button>\n      </form>)\n}\n  \nexport default Login;"],"names":["Label","styled","Input","Button","useState","userEmail","setUserEmail","userPassword","setUserPassword","dispatch","useDispatch","handleChange","e","target","name","value","onSubmit","preventDefault","currentTarget","elements","logIn","email","password","type","onChange","title","required","text"],"sourceRoot":""}