{"version":3,"file":"static/js/266.6cc1d6f6.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm_css.jsx","components/Section/Section_css.jsx","components/Section/Section.jsx","components/ContactsInfo/ContactsInfo._css.jsx","components/ContactInfo/ContactInfo_css.jsx","components/ContactInfo/ContactInfo.jsx","components/ContactsInfo/ContactsInfo.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter_css.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Label = styled.label`\ndisplay: block;\n  padding: 4px;\n  margin: 8px;\n  text-transform: uppercase;\n  font-size: 24px;\n  `;\n\nexport const Input = styled.input`\ndisplay: block;\nmargin-top: 8px;\nfont-size: 24px;\n&:hover {\n    border-color: black;\n}`;\n\nexport const Button = styled.button`  \n  width: 200px;\n  height: 50px;\n  padding: 4px;\n  margin: 8px;\n  color: white;\n  font-size: 24px;\n  text-transform: uppercase;\n  background-color: black;\n  border-radius: 6px;\n  cursor: pointer;`;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\nmargin: 0;\n  padding: 16px;\n  font-size: 32px;\n  `;","import { Title } from \"./Section_css\";\n\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n    return (\n        <section>\n            <Title>{title}</Title>\n            {children}\n        </section>);\n}\n          \nSection.propTypes = {\n    title: PropTypes.node,\n    children: PropTypes.node,\n}","import styled from \"styled-components\";  \n\nexport const Ul = styled.ul`\n  margin-top: 24px;\n  padding: 0;`;\n","import styled from \"styled-components\";  \n\nexport const P = styled.p`\nmargin: 0;`;\n\nexport const Button = styled.button`\n  \n  width: 150px;\n  height: 40px;\n  padding: 4px;\n  color: white;\n  font-size: 24px;\n  text-transform: uppercase;\n  background-color: black;\n  border-radius: 6px;\n  cursor: pointer;\n  \n  &:disabled { background-color: darkgray;}\n \n  `;\n  export const Li = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 600px;\n  list-style: none;\n  padding: 4px;\n  margin: 8px;\n  font-size: 24px;`;\n","import { P, Li, Button } from './ContactInfo_css';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactInfo = ({ id, name, number }) => {\n\n      const dispatch = useDispatch();\n\n      const onDeliteContact = (id) => {\n            dispatch(deleteContact(id));\n      }\n      \n      return (\n        <>\n          <Li>    \n            <P>{name}: {number}</P>\n            <Button onClick={() => { onDeliteContact(id) }}>Delite</Button>  \n          </Li>\n        </>)\n};\nContactInfo.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n}","import { Ul } from './ContactsInfo._css';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from \"redux/selectors\";\nimport {ContactInfo} from 'components/ContactInfo/ContactInfo';\n\nexport const ContactsInfo = () => {\n\n      const contacts = useSelector(getContacts);\n      const filter = useSelector(getFilter);\n\n      const toFiltredContacts = () => {\n            const normalizeFilter = filter.toLowerCase();\n            return (contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter)));\n      }\n  \n      const filtredContacts = toFiltredContacts();\n     \n      return (\n          <Ul>\n                  {filtredContacts.map(( contact ) => (\n                        <ContactInfo key = {contact.id} {...contact}/>))}\n          </Ul>)\n};","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Label, Input, Button } from \"./ContactForm_css\";\nimport { getContacts } from \"redux/selectors\";\nimport { addContact } from 'redux/operations';\n\nexport function ContactForm () {\n\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const {name, value } = e.target;\n    switch (name) {\n      case ('contactName'):\n        setContactName(value);\n        break;\n      case ('contactNumber'):\n        setContactNumber(value);\n        break;\n      default:\n        setContactName('');\n        setContactNumber('');\n        break;\n    }    \n  }\n\n  const handleAddContact = (e) => {\n    e.preventDefault();\n\n    const { contactName, contactNumber } = e.currentTarget.elements;\n\n    const normalizeNewContactName = contactName.value.toLowerCase();\n\n    contacts.find(contact => contact.name.toLowerCase() === normalizeNewContactName) ? alert(`${contactName.value} is already incontacts`) :\n    dispatch(addContact({name: contactName.value, number: contactNumber.value}));\n\n    setContactName('');\n    setContactNumber('');\n  }\n\n    return (\n      <form onSubmit={handleAddContact} >\n        <Label>Name <Input\n          type=\"text\"\n          name=\"contactName\"\n          onChange={handleChange}\n          value={contactName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        /></Label>\n        <Label>Number <Input\n          type=\"tel\"\n          name=\"contactNumber\"\n          onChange={handleChange}\n          value={contactNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        /></Label>\n            \n        <Button type=\"submit\" text=\"Add contact\">Add contact</Button>\n      </form>)\n  }","import styled from \"styled-components\";\n\nexport const Input = styled.input`\ndisplay: block;\nmargin: 8px;\nfont-size: 24px;\n\n&:hover {\n    border-color: black;\n}`;","import { Input } from './Filter_css'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from \"redux/selectors\";\nimport { changeFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n    \n    const filter = useSelector(getFilter);\n    const dispatch = useDispatch();\n    \n    const handleFilter = (e) => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n    }\n    \n      return (\n          <Input\n              name=\"filter\"\n              value={filter}\n              onChange={handleFilter}\n              />)\n};","\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from \"react\";\nimport { Section } from 'components/Section/Section';\nimport { ContactsInfo } from 'components/ContactsInfo/ContactsInfo';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/operations';\nimport { getIsLoading, getError, getContacts } from 'redux/selectors';\n\nfunction Contacts() {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    const isLoading = useSelector(getIsLoading);\n    const error = useSelector(getError);\n  \n    useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n    \n    return (\n    <>\n        <Section title=\"Phonebook\">\n        <ContactForm />\n        </Section>\n          \n        <Section title=\"Contacts\">\n            <Filter />\n            {isLoading && !error && contacts.length === 0 && <b style={{ paddingLeft: '12px', fontSize: '24px' }}>Request in progress...</b>}\n            <ContactsInfo />\n        </Section>\n    </>);\n}\nexport default Contacts;\n\n\n  "],"names":["Label","styled","Input","Button","Title","Section","title","children","Ul","P","Li","ContactInfo","id","name","number","dispatch","useDispatch","onClick","deleteContact","onDeliteContact","ContactsInfo","contacts","useSelector","getContacts","filter","getFilter","filtredContacts","normalizeFilter","toLowerCase","contact","includes","toFiltredContacts","map","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","handleChange","e","target","value","onSubmit","preventDefault","currentTarget","elements","normalizeNewContactName","find","alert","addContact","type","onChange","pattern","required","text","Filter","changeFilter","isLoading","getIsLoading","error","getError","useEffect","fetchContacts","length","style","paddingLeft","fontSize"],"sourceRoot":""}