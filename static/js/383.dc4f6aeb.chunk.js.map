{"version":3,"file":"static/js/383.dc4f6aeb.chunk.js","mappings":"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","sources":["components/Section/Section_css.jsx","components/Section/Section.jsx","components/ContactsInfo/ContactsInfo._css.jsx","components/ContactInfo/ContactInfo.jsx","components/ContactsInfo/ContactsInfo.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/Modal.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 0;\n  padding: 16px;\n  font-size: 32px;\n`;\n\nexport const SectionEl = styled.section`\n  margin-top: 12px;\n  margin-bottom: 12px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { Title, SectionEl } from './Section_css';\n\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionEl>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionEl>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 24px;\n  padding: 0;\n`;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/Contacts/operations';\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Grid from '@mui/material/Grid';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactInfo = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const onDeliteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const Demo = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n  }));\n\n  return (\n    <>\n      <Box sx={{ flexGrow: 1, maxWidth: '100%' }}>\n        <Grid item xs={12} md={6}>\n          <Demo>\n            <List>\n              <ListItem\n                secondaryAction={\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"delete\"\n                    onClick={() => {\n                      onDeliteContact(id);\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                }\n              >\n                <ListItemAvatar>\n                  <Avatar>\n                    <PhoneIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  {name}: {number}\n                </ListItemText>\n              </ListItem>\n            </List>\n          </Demo>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nContactInfo.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import { Ul } from './ContactsInfo._css';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from \"redux/selectors\";\nimport {ContactInfo} from 'components/ContactInfo/ContactInfo';\n\nexport const ContactsInfo = () => {\n\n      const contacts = useSelector(getContacts);\n      const filter = useSelector(getFilter);\n\n      const toFiltredContacts = () => {\n            const normalizeFilter = filter.toLowerCase();\n            return (contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter)));\n      }\n  \n      const filtredContacts = toFiltredContacts();\n     \n      return (\n          <Ul>\n                  {filtredContacts.map(( contact ) => (\n                        <ContactInfo key = {contact.id} {...contact}/>))}\n          </Ul>)\n};","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/Contacts/filterSlice';\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <TextField\n      id=\"outlined-search\"\n      label=\"Find contact\"\n      type=\"search\"\n      variant=\"filled\"\n      name=\"filter\"\n      value={filter}\n      onChange={handleFilter}\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/Contacts/operations';\n\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport function ContactForm({ toggleModal }) {\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'contactName':\n        setContactName(value);\n        break;\n      case 'contactNumber':\n        setContactNumber(value);\n        break;\n      default:\n        setContactName('');\n        setContactNumber('');\n        break;\n    }\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    const { contactName, contactNumber } = e.currentTarget.elements;\n\n    const normalizeNewContactName = contactName.value.toLowerCase();\n\n    contacts.find(\n      contact => contact.name.toLowerCase() === normalizeNewContactName\n    )\n      ? alert(`${contactName.value} is already incontacts`)\n      : dispatch(\n          addContact({ name: contactName.value, number: contactNumber.value })\n        );\n\n    setContactName('');\n    setContactNumber('');\n    toggleModal();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleAddContact}\n    >\n      <div>\n        <TextField\n          type=\"text\"\n          name=\"contactName\"\n          label=\"Name\"\n          onChange={handleChange}\n          value={contactName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          style={{ width: '38ch' }}\n        />\n        <TextField\n          required\n          type=\"tel\"\n          label=\"Phone\"\n          name=\"contactNumber\"\n          onChange={handleChange}\n          value={contactNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          style={{ width: '38ch' }}\n        />\n      </div>\n\n      <Button\n        size=\"small\"\n        type=\"submit\"\n        text=\"Add contact\"\n        style={{ marginLeft: '8px' }}\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport PropTypes from 'prop-types';\nimport { ContactForm } from './ContactForm/ContactForm';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport function ModalWindow({ toggleModal, isModalOpen }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEsc);\n\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  });\n\n  const handleEsc = e => {\n    if (e.code === 'Escape') {\n      toggleModal();\n    }\n  };\n\n  const handleBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      toggleModal();\n    }\n  };\n\n  const handleClose = e => {\n    toggleModal();\n  };\n\n  return createPortal(\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={isModalOpen}\n      onClose={handleBackdrop}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={isModalOpen}>\n        <Box sx={style} style={{ borderColor: 'primary' }}>\n          <Button style={{ left: '88%' }} onClick={handleClose}>\n            <CloseIcon />\n          </Button>\n          <ContactForm toggleModal={toggleModal} />\n        </Box>\n      </Fade>\n    </Modal>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func,\n  src: PropTypes.string,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { Section } from 'components/Section/Section';\nimport { ContactsInfo } from 'components/ContactsInfo/ContactsInfo';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/Contacts/operations';\nimport { getIsLoading, getError, getContacts } from 'redux/selectors';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { Button, Typography } from '@mui/material';\nimport { ModalWindow } from 'components/Modal';\nimport SearchIcon from '@mui/icons-material/Search';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\n\n  const handleOpenModal = () => {\n    toggleModal();\n  };\n\n  const toggleFilter = () => setIsFilterOpen(!isFilterOpen);\n\n  const handleOpenFilter = () => {\n    toggleFilter();\n  };\n\n  return (\n    <>\n      <Section>\n        <Typography\n          variant=\"h4\"\n          component=\"h2\"\n          style={{ textAlign: 'center', marginBottom: '12px' }}\n        >\n          My contacts\n        </Typography>\n        <div style={{ marginBottom: '12px' }}>\n          <Button type=\"button\" onClick={handleOpenModal}>\n            <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n          </Button>\n          <Button type=\"button\" onClick={handleOpenFilter}>\n            <SearchIcon color=\"primary\" fontSize=\"large\" />\n          </Button>\n        </div>\n        {isFilterOpen && <Filter />}\n        {isLoading && !error && contacts.length === 0 && (\n          <b style={{ paddingLeft: '12px', fontSize: '24px' }}>\n            Request in progress...\n          </b>\n        )}\n        <ContactsInfo />\n      </Section>\n\n      {isModalOpen && (\n        <ModalWindow isModalOpen={isModalOpen} toggleModal={toggleModal} />\n      )}\n    </>\n  );\n}\nexport default Contacts;\n"],"names":["Title","styled","SectionEl","Section","title","children","Ul","ContactInfo","id","name","number","dispatch","useDispatch","Demo","backgroundColor","theme","palette","background","paper","Box","sx","flexGrow","maxWidth","Grid","item","xs","md","List","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","onDeliteContact","Delete","ListItemAvatar","Avatar","Phone","ListItemText","ContactsInfo","contacts","useSelector","getContacts","filter","getFilter","filtredContacts","normalizeFilter","toLowerCase","contact","includes","toFiltredContacts","map","Filter","TextField","label","type","variant","value","onChange","e","target","changeFilter","ContactForm","toggleModal","useState","contactName","setContactName","contactNumber","setContactNumber","handleChange","component","m","width","noValidate","autoComplete","onSubmit","preventDefault","currentTarget","elements","normalizeNewContactName","find","alert","addContact","pattern","required","style","Button","size","text","marginLeft","modalRoot","document","getElementById","position","top","left","transform","bgcolor","border","boxShadow","p","ModalWindow","isModalOpen","useEffect","window","addEventListener","handleEsc","removeEventListener","code","createPortal","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","borderColor","Close","PropTypes","src","isLoading","getIsLoading","error","getError","setIsModalOpen","isFilterOpen","setIsFilterOpen","fetchContacts","Typography","textAlign","marginBottom","AddCircle","color","fontSize","Search","length","paddingLeft"],"sourceRoot":""}