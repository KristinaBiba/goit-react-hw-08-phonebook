{"version":3,"file":"static/js/971.fcde5fe7.chunk.js","mappings":"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","sources":["components/Section/Section.jsx","components/ContactInfo/ContactInfo.jsx","components/ContactsInfo/ContactsInfo.jsx","components/Filter/Filter.jsx","components/ContastsSkeleton/ContastsSkeleton.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.jsx","pages/Contacts.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Box, Typography } from '@mui/material';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Box\n      component=\"main\"\n      sx={{ marginTop: '12px', marginBottom: '12px', textAlign: 'center' }}\n    >\n      {title && (\n        <Typography\n          variant=\"h4\"\n          component=\"h2\"\n          sx={{ textAlign: 'center', marginBottom: '12px' }}\n        >\n          {title}\n        </Typography>\n      )}\n      {children}\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/Contacts/operations';\n\nimport {\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  IconButton,\n} from '@mui/material';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactInfo = ({ _id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  const onDeliteContact = _id => {\n    dispatch(deleteContact(_id));\n  };\n\n  return (\n            <ListItem\n              secondaryAction={\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    onDeliteContact(_id);\n                  }}\n                  sx={{ flexGrow: 1, maxWidth: '100%' }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              }\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <PhoneIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText>\n                {name}: {phone}\n              </ListItemText>\n            </ListItem>\n  );\n};\n\nContactInfo.propTypes = {\n  _id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\n\nimport { ContactInfo } from 'components/ContactInfo/ContactInfo';\n\nimport { List } from '@mui/material';\n\nexport const ContactsInfo = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const toFiltredContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const filtredContacts = toFiltredContacts();\n\n  return (\n    <List disablePadding sx={{maxWidth: '350px', marginRight: 'auto', marginLeft: 'auto'}}>\n      {filtredContacts.map(contact => (\n        <ContactInfo key={contact._id} {...contact} />\n      ))}\n    </List>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/Contacts/filterSlice';\n\nimport {TextField} from '@mui/material';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <TextField\n      id=\"outlined-search\"\n      label=\"Find contact\"\n      type=\"search\"\n      variant=\"filled\"\n      name=\"filter\"\n      value={filter}\n      onChange={handleFilter}\n    />\n  );\n};\n","import { Card, Skeleton } from '@mui/material';\n\nexport function ContastsSkeleton() {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: '318px',\n        marginTop: '24px',\n      }}\n    >\n      {[1, 2, 3, 4, 5].map(item => (\n        <Card\n          key={item}\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: '16px',\n            marginBottom: '20px',\n            boxShadow: 'none',\n          }}\n        >\n          <Skeleton variant=\"circular\" width={40} height={40} />\n          <Skeleton variant=\"rounded\" width={230} height={24} />\n          <Skeleton variant=\"circular\" width={24} height={24} />\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/Contacts/operations';\n\nimport {Button, Box, TextField, FormControl, Typography} from '@mui/material';\n\nexport function ContactForm({ toggleModal }) {\n  const [contactName, setContactName] = useState('');\n  const [contactPhone, setContactPhone] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'contactName':\n        setContactName(value);\n        break;\n      case 'contactPhone':\n        setContactPhone(value);\n        break;\n      default:\n        setContactName('');\n        setContactPhone('');\n        break;\n    }\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    const { contactName, contactPhone } = e.currentTarget.elements;\n\n    const normalizeNewContactName = contactName.value.toLowerCase();\n\n    contacts.find(\n      contact => contact.name.toLowerCase() === normalizeNewContactName\n    )\n      ? alert(`${contactName.value} is already incontacts`)\n      : dispatch(\n          addContact({ name: contactName.value, phone: contactPhone.value })\n        );\n\n    setContactName('');\n    setContactPhone('');\n    toggleModal();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' }, padding: '12px' }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleAddContact}\n    >\n      <Typography variant='h6' component=\"h3\" align=\"center\"\n        color=\"primary\" mb={2}> Create new contact</Typography>\n      <Box sx={{display: 'flex', flexDirection: 'column', gap: '8px'}}>\n      <FormControl>\n        <TextField\n          type=\"text\"\n          name=\"contactName\"\n          label=\"Name\"\n          onChange={handleChange}\n          value={contactName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n          </FormControl>\n        <FormControl>\n        <TextField\n          required\n          type=\"tel\"\n          label=\"Phone\"\n          name=\"contactPhone\"\n          onChange={handleChange}\n          value={contactPhone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n         </FormControl>\n      </Box>\n\n      <Button\n        size=\"small\"\n        type=\"submit\"\n        text=\"Add contact\"\n        style={{ marginLeft: '8px', marginTop: '8px' }}\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n}\n\nContactForm.propTypes = {\n  toggleModal: PropTypes.func,\n};\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nimport { Backdrop, Box, Modal, Fade, IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  borderColor: 'primary',\n};\n\nexport function ModalWindow({ toggleModal, isModalOpen }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEsc);\n\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  });\n\n  const handleEsc = e => {\n    if (e.code === 'Escape') {\n      toggleModal();\n    }\n  };\n\n  const handleBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      toggleModal();\n    }\n  };\n\n  const handleClose = e => {\n    toggleModal();\n  };\n\n  return createPortal(\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={isModalOpen}\n      onClose={handleBackdrop}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={isModalOpen}>\n        <Box sx={style}>\n          <IconButton sx={{ left: '90%' }}  onClick={handleClose} aria-label=\"add an alarm\">\n            <CloseIcon />\n          </IconButton>\n          <ContactForm toggleModal={toggleModal} />\n        </Box>\n      </Fade>\n    </Modal>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func,\n  src: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchContacts } from 'redux/Contacts/operations';\nimport { getIsLoading, getError } from 'redux/selectors';\nimport { Section } from 'components/Section/Section';\nimport { ContactsInfo } from 'components/ContactsInfo/ContactsInfo';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContastsSkeleton } from 'components/ContastsSkeleton/ContastsSkeleton';\nimport { ModalWindow } from 'components/Modal/Modal';\n\nimport { Button } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport SearchIcon from '@mui/icons-material/Search';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\n\n  const handleOpenModal = () => {\n    toggleModal();\n  };\n\n  const toggleFilter = () => setIsFilterOpen(!isFilterOpen);\n\n  const handleOpenFilter = () => {\n    toggleFilter();\n  };\n\n  return (\n    <>\n      <Section title='My contacts'>\n        <div style={{ marginBottom: '12px' }}>\n          <Button type=\"button\" onClick={handleOpenModal}>\n            <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n          </Button>\n          <Button type=\"button\" onClick={handleOpenFilter}>\n            <SearchIcon color=\"primary\" fontSize=\"large\" />\n          </Button>\n        </div>\n        {isFilterOpen && <Filter />}\n\n        {isLoading && !error && \n        <ContastsSkeleton/>}\n\n        {!isLoading && <ContactsInfo />}\n      </Section>\n\n      {isModalOpen && (\n        <ModalWindow isModalOpen={isModalOpen} toggleModal={toggleModal} />\n      )}\n    </>\n  );\n}\nexport default Contacts;\n"],"names":["Section","title","children","Box","component","sx","marginTop","marginBottom","textAlign","Typography","variant","ContactInfo","_id","name","phone","dispatch","useDispatch","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","onDeliteContact","flexGrow","maxWidth","Delete","ListItemAvatar","Avatar","Phone","ListItemText","ContactsInfo","contacts","useSelector","getContacts","filter","getFilter","filtredContacts","normalizeFilter","toLowerCase","contact","includes","toFiltredContacts","List","disablePadding","marginRight","marginLeft","map","Filter","TextField","id","label","type","value","onChange","e","target","changeFilter","ContastsSkeleton","style","display","flexDirection","item","Card","alignItems","gap","boxShadow","Skeleton","width","height","ContactForm","toggleModal","useState","contactName","setContactName","contactPhone","setContactPhone","handleChange","m","padding","noValidate","autoComplete","onSubmit","preventDefault","currentTarget","elements","normalizeNewContactName","find","alert","addContact","align","color","mb","FormControl","pattern","required","Button","size","text","modalRoot","document","getElementById","position","top","left","transform","bgcolor","border","p","borderColor","ModalWindow","isModalOpen","useEffect","window","addEventListener","handleEsc","removeEventListener","code","createPortal","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Close","PropTypes","src","isLoading","getIsLoading","error","getError","setIsModalOpen","isFilterOpen","setIsFilterOpen","fetchContacts","AddCircle","fontSize","Search"],"sourceRoot":""}