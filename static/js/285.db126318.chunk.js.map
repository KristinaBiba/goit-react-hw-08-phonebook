{"version":3,"file":"static/js/285.db126318.chunk.js","mappings":"2PAEaA,EAAQC,EAAAA,GAAAA,MAAH,8HAQLC,EAAQD,EAAAA,GAAAA,MAAH,mHAQLE,EAASF,EAAAA,GAAAA,OAAH,oO,4FC+DnB,UA5EA,WACE,OAAgCG,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GACpB,MAAuBA,EAAEC,OAAlBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACb,OAAQD,GACN,IAAM,WACJV,EAAYW,GACZ,MACF,IAAM,YACJT,EAAaS,GACb,MACF,IAAM,eACJP,EAAgBO,GAChB,MACF,QACEX,EAAY,IACZE,EAAa,IACbE,EAAgB,IAGrB,EAiBC,OACE,kBAAMQ,SAhBa,SAACJ,GACtBA,EAAEK,iBAEF,MAA8CL,EAAEM,cAAcC,SAAtDhB,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,UAAWE,EAA7B,EAA6BA,aAK7BE,GAASW,EAAAA,EAAAA,IAAS,CAACN,KAAMX,EAASY,MAAOM,MAAOhB,EAAUU,MAAOO,SAAUf,EAAaQ,SAEpFX,EAAY,IACZE,EAAa,IACbE,EAAgB,GACrB,EAGG,WACE,UAAC,KAAD,oBAAY,SAAC,KAAD,CACVe,KAAK,OACLT,KAAK,WACLU,SAAUb,EACVI,MAAOZ,EACPsB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAEV,UAAC,KAAD,qBAAa,SAAC,KAAD,CACXJ,KAAK,QACLT,KAAK,YACLU,SAAUb,EACVI,MAAOV,EAEPqB,MAAM,8CACNC,UAAQ,QAEV,UAAC,KAAD,wBAAgB,SAAC,KAAD,CACdJ,KAAK,OACLT,KAAK,eACLU,SAAUb,EACVI,MAAOR,EAEPmB,MAAM,4CACNC,UAAQ,QAGV,SAAC,KAAD,CAAQJ,KAAK,SAASK,KAAK,WAA3B,wBAEP,C","sources":["components/ContactForm/ContactForm_css.jsx","pages/Register.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Label = styled.label`\ndisplay: block;\n  padding: 4px;\n  margin: 8px;\n  text-transform: uppercase;\n  font-size: 24px;\n  `;\n\nexport const Input = styled.input`\ndisplay: block;\nmargin-top: 8px;\nfont-size: 24px;\n&:hover {\n    border-color: black;\n}`;\n\nexport const Button = styled.button`  \n  width: 200px;\n  height: 50px;\n  padding: 4px;\n  margin: 8px;\n  color: white;\n  font-size: 24px;\n  text-transform: uppercase;\n  background-color: black;\n  border-radius: 6px;\n  cursor: pointer;`;\n","import React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { Label, Input, Button } from \"../components/ContactForm/ContactForm_css\";\nimport { register } from 'redux/authOperations';\n\nfunction Register() {\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const {name, value } = e.target;\n    switch (name) {\n      case ('userName'):\n        setUserName(value);\n        break;\n      case ('userEmail'):\n        setUserEmail(value);\n        break;\n      case ('userPassword'):\n        setUserPassword(value);\n        break;\n      default:\n        setUserName('');\n        setUserEmail('');\n        setUserPassword('');\n        break;\n    }    \n  }\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    const { userName, userEmail, userPassword } = e.currentTarget.elements;\n\n    // const normalizeNewContactName = userName.value.toLowerCase();\n\n    // contacts.find(contact => contact.name.toLowerCase() === normalizeNewContactName) ? alert(`${contactName.value} is already incontacts`) :\n    dispatch(register({name: userName.value, email: userEmail.value, password: userPassword.value,}));\n\n        setUserName('');\n        setUserEmail('');\n        setUserPassword('');\n  }\n\n    return (\n      <form onSubmit={handleRegister} >\n        <Label>Name <Input\n          type=\"text\"\n          name=\"userName\"\n          onChange={handleChange}\n          value={userName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        /></Label>\n        <Label>Email <Input\n          type=\"email\"\n          name=\"userEmail\"\n          onChange={handleChange}\n          value={userEmail}\n          \n          title=\"Email must be digits, letters and contain @\"\n          required\n        /></Label>\n        <Label>Password <Input\n          type=\"text\"\n          name=\"userPassword\"\n          onChange={handleChange}\n          value={userPassword}\n        //   pattern=\"/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}/g\"\n          title=\"Password must contain letters and numbers\"\n          required\n        /></Label>\n            \n        <Button type=\"submit\" text=\"Register\">Register</Button>\n      </form>)\n}\n  \nexport default Register;"],"names":["Label","styled","Input","Button","useState","userName","setUserName","userEmail","setUserEmail","userPassword","setUserPassword","dispatch","useDispatch","handleChange","e","target","name","value","onSubmit","preventDefault","currentTarget","elements","register","email","password","type","onChange","pattern","title","required","text"],"sourceRoot":""}